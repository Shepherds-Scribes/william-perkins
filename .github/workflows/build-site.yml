# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Site

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  site:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
        cache-dependency-path: ./site/package-lock.json
    - run: npm ci
      working-directory: ./site
    - run: npm run build
      working-directory: ./site
    - name: Publish site
      uses: actions/upload-artifact@v3
      with:
        name: site
        path: dist
  mdbooks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        book: ['transcribed-volume1', 'transcribed-volume2', 'transcribed-volume3', 'modern-volume1', 'modern-volume2', 'modern-volume3']
    steps:
    - uses: actions/checkout@v3
    - name: Cache mdbook
      uses: actions/cache@v3
      env:
        cache-name: cache-cargo
      with:
        # cargo cache files are stored in `~/.cargo` on Linux/macOS
        path: ~/.cargo
        key: ${{ runner.os }}-build-${{ env.cache-name }}
    - name: Dependencies
      run: cargo install mdbook
    - name: Build ${{ matrix.book }}
      run: mdbook build
      working-directory: ./builds/${{ matrix.book }}
    - name: Publish books
      uses: actions/upload-artifact@v3
      with:
        name: mdbooks-${{ matrix.book }}
        path: dist
  publish:
    runs-on: ubuntu-latest
    needs: [site, mdbooks]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
    - name: Collate
      run: |
        find . -name "mdbooks-*" | xargs -I{} cp -r -T {} ./dist
        cp -r -T site/ ./dist
        touch ./dist/.nojekyll
    - name: Publish
      uses: JamesIves/github-pages-deploy-action@v4.3.0
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: dist # The folder the action should deploy.
